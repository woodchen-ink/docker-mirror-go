name: ðŸ”¨ Build Binaries

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Get dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        export CGO_ENABLED=0
        export OUTPUT_NAME=docker-mirror-go-${{ matrix.goos }}-${{ matrix.goarch }}
        if [ "${{ matrix.goos }}" = "windows" ]; then
          export OUTPUT_NAME="${OUTPUT_NAME}.exe"
        fi
        go build -a -installsuffix cgo -ldflags '-w -s' -o ${OUTPUT_NAME} .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-mirror-go-${{ matrix.goos }}-${{ matrix.goarch }}
        path: docker-mirror-go-${{ matrix.goos }}-${{ matrix.goarch }}*