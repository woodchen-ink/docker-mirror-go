name: ðŸš€ Build and Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build binary for ${{ matrix.arch }}
      run: |
        GOOS=linux GOARCH=${{ matrix.arch }} go build -ldflags="-s -w" -o docker-mirror-go-linux-${{ matrix.arch }} .

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-mirror-go-linux-${{ matrix.arch }}
        path: docker-mirror-go-linux-${{ matrix.arch }}

  docker:
    if: github.event_name != 'pull_request'
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download amd64 binary
      uses: actions/download-artifact@v4
      with:
        name: docker-mirror-go-linux-amd64
        path: .

    - name: Download arm64 binary
      uses: actions/download-artifact@v4
      with:
        name: docker-mirror-go-linux-arm64
        path: .

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
